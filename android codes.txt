-- animacion splash

        ImageView logo = findViewById(R.id.imageView);

        // Carga la animación desde XML
        Animation fadeInAnimation = AnimationUtils.loadAnimation(this, R.anim.fade_in);

        // Aplica la animación al logotipo
        logo.startAnimation(fadeInAnimation);

        // Crear un temporizador para simular la carga
        new Handler().postDelayed(() -> {
            // Iniciar HomeActivity después del retraso
            Intent intent = new Intent(MainActivity.this, home.class);
            startActivity(intent);
            finish(); // Cierra SplashActivity para que no vuelva al presionar "Atrás"
        }, 3000); // Duración de la carga en milisegundos (3000 ms = 3 segundos)
        
        
    -- ir activida desde evento btn---   
        
          back.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(register.this, login.class);
                startActivity(intent);
            }
        });
        
     --- llamar servicio
        
               save.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                sendNuevo("http://192.168.220.51/risk/servicio/nuevo_user.php");
            }
        });
        
        
        --- permisos
              # gradle
          implementation("com.android.volley:volley:1.2.1")
      # manifest

        
        
      -- servicio de enviar nuevo.
    <uses-permission android:name="android.permission.INTERNET"></uses-permission>
     android:usesCleartextTraffic="true"
    private void sendNuevo(String url){
        StringRequest sr = new StringRequest(Request.Method.POST, url, new Response.Listener<String>() {
            @Override
            public void onResponse(String response) {
                Toast.makeText(getApplicationContext(), "exito", Toast.LENGTH_SHORT).show();
            }
        }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                Toast.makeText(getApplicationContext(),error.toString(),Toast.LENGTH_SHORT).show();
            }
        }){
            @Nullable
            @Override
            protected Map<String, String> getParams() throws AuthFailureError {
                Map<String,String> parametros =  new HashMap<String,String>();
                parametros.put("nick",nick.getText().toString());
                parametros.put("pass",pass1.getText().toString());
                return parametros;
            }
        };
        RequestQueue requestQueue = Volley.newRequestQueue(this);
        requestQueue.add(sr);

    }
